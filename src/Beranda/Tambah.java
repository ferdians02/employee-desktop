package Beranda;

import Connect.ConnectDB;
import com.mysql.jdbc.Connection;
import com.mysql.jdbc.Statement;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Date;

import constant.Constants;
import java.util.Random;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import util.ValidateUtil;

/**
 *
 * @author rakha
 */
public class Tambah extends javax.swing.JPanel {

    private Connection conn = (Connection) new ConnectDB().connect();

    private final Dashboard main;
    private String namaKaryawan, nik, nohp, divisi, namaJabatan, jk, alamat;

    public Tambah(Dashboard main) {
        initComponents();
        this.main = main;
        comboDivBox();
        comboJabatanBox();
        comboJenisKelaminBox();
        loadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cari = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblKar = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        nikKar = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        namaKar = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        divsi = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jbtn = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        no = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jenis = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        almt = new javax.swing.JTextArea();
        hapus = new javax.swing.JButton();
        addKaryawan = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        clear = new javax.swing.JButton();

        setBackground(new java.awt.Color(30, 30, 30));

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Cari Karyawan :");

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Tambah Karyawan");

        jButton3.setBackground(new java.awt.Color(204, 102, 0));
        jButton3.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Cari");
        jButton3.setBorderPainted(false);
        jButton3.setPreferredSize(new java.awt.Dimension(0, 50));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        tblKar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblKarMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblKar);

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Jabatan :");

        jLabel4.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Nama Karyawan :");

        namaKar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaKarActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("NIK");

        divsi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih" }));

        jLabel6.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Divisi :");

        jbtn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel7.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("No Telepon :");

        no.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Jenis Kelamin :");

        jenis.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel9.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Alamat :");

        almt.setColumns(20);
        almt.setRows(5);
        jScrollPane2.setViewportView(almt);

        hapus.setBackground(new java.awt.Color(204, 102, 0));
        hapus.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        hapus.setForeground(new java.awt.Color(255, 255, 255));
        hapus.setText("Hapus");
        hapus.setBorderPainted(false);
        hapus.setPreferredSize(new java.awt.Dimension(0, 50));
        hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusActionPerformed(evt);
            }
        });

        addKaryawan.setBackground(new java.awt.Color(204, 102, 0));
        addKaryawan.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        addKaryawan.setForeground(new java.awt.Color(255, 255, 255));
        addKaryawan.setText("tambah");
        addKaryawan.setBorderPainted(false);
        addKaryawan.setPreferredSize(new java.awt.Dimension(0, 50));
        addKaryawan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addKaryawanActionPerformed(evt);
            }
        });

        edit.setBackground(new java.awt.Color(204, 102, 0));
        edit.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        edit.setForeground(new java.awt.Color(255, 255, 255));
        edit.setText("Edit");
        edit.setBorderPainted(false);
        edit.setPreferredSize(new java.awt.Dimension(0, 50));
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        clear.setBackground(new java.awt.Color(204, 102, 0));
        clear.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        clear.setForeground(new java.awt.Color(255, 255, 255));
        clear.setText("Clear");
        clear.setBorderPainted(false);
        clear.setPreferredSize(new java.awt.Dimension(0, 50));
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cari, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(no)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jenis, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(namaKar)
                            .addComponent(nikKar)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel4)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(divsi, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addComponent(jbtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel9)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(edit, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addKaryawan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(hapus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(clear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel2)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cari, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(divsi, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nikKar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(namaKar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(no, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jenis, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addKaryawan, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edit, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        DefaultTableModel model = new DefaultTableModel();

        model.addColumn("NIK");
        model.addColumn("NAMA KARYAWAN");
        model.addColumn("NO HANDPHONE");
        model.addColumn("ALAMAT");
        model.addColumn("JENIS KELAMIN");
        model.addColumn("DIVISI");
        model.addColumn("JABATAN");

        String sql = """
                     
                        select 
                            k.nik,
                            k.nama_karyawan as nama_karyawan,
                            k.notlp as notlp,
                            k.alamat as alamat,
                            k.jenis_kelamin as jenis_kelamin,
                            d.nama_divisi as nama_divisi,
                            j.nama_jabatan as nama_jabatan
                            from tb_karyawan k 
                            inner join tb_jabatan j on k.id_jabatan = j.id_jabatan
                            inner join tb_divisi d on k.id_divisi = d.id_divisi
                        WHERE K.RECORD_FLAG <> 'D' 
                        AND (UPPER (k.nik) LIKE UPPER (?))
                     """;

        System.out.println("Keyword : " + cari.getText());
        try {
            PreparedStatement ps = conn.prepareStatement(sql);
            String keyword = "%" + cari.getText() + "%";
            ps.setString(1, keyword);
            ps.setString(2, keyword);
            ps.setString(3, keyword);

            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("nik"),
                    rs.getString("nama_karyawan"),
                    rs.getString("notlp"),
                    rs.getString("alamat"),
                    rs.getString("jenis_kelamin"),
                    rs.getString("nama_divisi"),
                    rs.getString("nama_jabatan")});
            }

            tblKar.setModel(model);

        } catch (Exception e) {

        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void namaKarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaKarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namaKarActionPerformed

    private void noActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_noActionPerformed

    private void hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusActionPerformed
        // TODO add your handling code here:
        namaKaryawan = namaKar.getText();
        nohp = no.getText();
        alamat = almt.getText();
        divisi = divsi.getSelectedItem().toString();
        namaJabatan = jbtn.getSelectedItem().toString();
        jk = jenis.getSelectedItem().toString();
        nik = nikKar.getText();

        try {

            String sql = """
                        UPDATE TB_KARYAWAN
                        SET 
                         UPDATE_BY = ?, 
                         UPDATE_AT = ?, 
                         RECORD_FLAG = ?
                        WHERE NIK = ?
                     """;

            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, "admin");
            java.util.Date utilDate = new java.util.Date();
            java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
            ps.setDate(2, sqlDate);
            ps.setString(3, Constants.RECORD_FLAG_D);
            ps.setString(4, nik);

            ps.execute();
            clear();
            loadData();
            JOptionPane.showMessageDialog(null, "Data berhasil dihapus");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Tidak bisa terhubung " + e.getMessage());
        }
    }//GEN-LAST:event_hapusActionPerformed

    private void addKaryawanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addKaryawanActionPerformed

        nik = nikKar.getText();
        namaKaryawan = namaKar.getText();
        nohp = no.getText();
        alamat = almt.getText();
        divisi = divsi.getSelectedItem().toString();
        namaJabatan = jbtn.getSelectedItem().toString();
        jk = jenis.getSelectedItem().toString();

        ValidateUtil.validationKaryawan(nik, namaKaryawan, nohp, alamat, divisi, namaJabatan, jk);

        String sql = """
                        INSERT INTO TB_KARYAWAN(ID_JABATAN, ID_DIVISI,
                     NAMA_KARYAWAN, 
                      JENIS_KELAMIN, NIK, NOTLP, ALAMAT, CREATE_BY, CREATE_AT, RECORD_FLAG) 
                     VALUES(?,?,?,?,?,?,?,?,?,?)
                       """;
        try {
            PreparedStatement ps = (PreparedStatement) conn.prepareStatement(sql);

            String empNik = getEmployeeNumber(nik);
            System.out.println("INI EMPLOYEE NUMBER : " + empNik);
            
            Integer jabatanId = findJabatanName(namaJabatan);
            Integer divisiId = getDivisiId(divisi);
            if (empNik == null) {
                
                if(jabatanId != null){
                    ps.setInt(1, jabatanId);
                    return;
                } 
                
                if(divisiId != null){
                    ps.setInt(2, divisiId);
                    return;
                } 
               
                ps.setString(3, namaKaryawan);
                ps.setString(4, jk);

                ps.setString(5, nik);
                ps.setString(6, nohp);
                ps.setString(7, alamat);
                ps.setString(8, "Admin");

                java.util.Date utilDate = new java.util.Date();
                java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
                ps.setDate(9, sqlDate);
                ps.setString(10, Constants.RECORD_FLAG_N);
                ps.executeUpdate();

                int empId = getEmployeeId(nik);
                generated(namaJabatan, empId);

                JOptionPane.showMessageDialog(null, "Data berhasil di buat");
                return;
               
            } else {
                JOptionPane.showMessageDialog(null, "NIK sudah ada");
            }

            loadData();

            clear();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Tidak terhubung " + e.getMessage());
        }

    }//GEN-LAST:event_addKaryawanActionPerformed

    private void loadTbleClick() {
        try {
            String sql = """
                            select 
                                k.nik,
                                k.nama_karyawan as nama_karyawan,
                                k.notlp as notlp,
                                k.alamat as alamat,
                                k.jenis_kelamin as jenis_kelamin,
                                d.nama_divisi as nama_divisi,
                                j.nama_jabatan as nama_jabatan
                            from tb_karyawan k 
                            inner join tb_jabatan j on k.id_jabatan = j.id_jabatan
                            inner join tb_divisi d on k.id_divisi = d.id_divisi
                            where k.nik = ?
                     """;

            int row = tblKar.getSelectedRow();
            String clickTable = (tblKar.getModel().getValueAt(row, 0).toString());

            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, clickTable);
            ResultSet rs = ps.executeQuery();

            if (rs.next()) {
                nikKar.setText(rs.getString("nik"));
                nikKar.setEnabled(false);

                namaKar.setText(rs.getString("nama_karyawan"));
                no.setText(rs.getString("notlp"));
                almt.setText(rs.getString("alamat"));
                jenis.setSelectedItem(rs.getString("jenis_kelamin"));
                divsi.setSelectedItem(rs.getString("nama_divisi"));
                jbtn.setSelectedItem(rs.getString("nama_jabatan"));
            }

        } catch (Exception e) {

        }
    }

    private void loadData() {
        DefaultTableModel model = new DefaultTableModel();

        model.addColumn("NIK");
        model.addColumn("NAMA KARYAWAN");
        model.addColumn("NO HANDPHONE");
        model.addColumn("ALAMAT");
        model.addColumn("JENIS KELAMIN");
        model.addColumn("DIVISI");
        model.addColumn("JABATAN");

        try {

            String sql = """
                       select 
                           k.nik,
                           k.nama_karyawan as nama_karyawan,
                           k.notlp as notlp,
                           k.alamat as alamat,
                           k.jenis_kelamin as jenis_kelamin,
                           d.nama_divisi as nama_divisi,
                           j.nama_jabatan as nama_jabatan
                       from tb_karyawan k 
                       inner join tb_jabatan j on k.id_jabatan = j.id_jabatan
                       inner join tb_divisi d on k.id_divisi = d.id_divisi
                       where k.record_flag <> 'D'
                       order by k.id_karyawan desc
                     """;

            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("NIK"),
                    rs.getString("nama_karyawan"),
                    rs.getString("notlp"),
                    rs.getString("alamat"),
                    rs.getString("jenis_kelamin"),
                    rs.getString("nama_divisi"),
                    rs.getString("nama_jabatan")
                });

                System.out.println("INI ADALAH NIK : " + rs.getString("nik"));
            }

            tblKar.setModel(model);

        } catch (Exception e) {

        }
    }

//    GENERATE  PASSWORD
    private void generated(String jabatan, Integer idKar) {
        try {
            String sql = "INSERT INTO TB_USER(ROLE_ID, ID_KARYAWAN, USERNAME, PASSWORD, CREATE_BY, CREATE_AT, RECORD_FLAG) VALUES (?,?,?,?,?,?,?)";

            PreparedStatement ps = conn.prepareStatement(sql);

            int valJabatan = findJabatanName(jabatan);
            String namaJabatan = getJabatan(jabatan);

            if (namaJabatan.equals("MANAGER") || namaJabatan.equals("STAFF IT") || namaJabatan.equals("HRD")) {
                ps.setInt(1, 2);
            } else {
                ps.setInt(1, 3);
            }

            ps.setInt(2, idKar);
            ps.setString(3, nikKar.getText());
            ps.setString(4, generatedPass());
            ps.setString(5, "admin");
            java.util.Date utilDate = new java.util.Date();
            java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
            ps.setDate(6, sqlDate);
            ps.setString(7, Constants.RECORD_FLAG_N);
            ps.executeUpdate();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Tidak bisa terhubung ke user : " + e.getMessage());
        }
    }

    private String generatedPass() {

        String nama = namaKar.getText();
        Random random = new Random();
        int intRandom = random.nextInt(12);
        String value = nama.toLowerCase() + intRandom;

        return value;
    }

    private void clear() {
        nikKar.setText("");
        namaKar.setText("");
        no.setText("");
        almt.setText("");
        divsi.setSelectedItem(false);
        jbtn.setSelectedItem(false);
        jenis.setSelectedItem(false);
    }

//    COMBO BOX
    private String comboDivBox() {
        divsi.addItem("IT");
        divsi.addItem("QA");
        divsi.addItem("ADMINISTRASI");
        divsi.addItem("KEUANGAN");
        divsi.addItem("GUDANG");

        String val = divsi.getSelectedItem().toString();

        return val;
    }

    private String comboJenisKelaminBox() {
        jenis.removeAllItems();
        jenis.addItem("Laki - laki");
        jenis.addItem("Perempuan");

        String val = jenis.getSelectedItem().toString();

        return val;
    }

    private void comboJabatanBox() {
        try {
            String sql = "SELECT NAMA_JABATAN FROM TB_JABATAN";
            PreparedStatement ps = (PreparedStatement) conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            jbtn.removeAllItems();
            jbtn.addItem("Pilih");
            while (rs.next()) {
                jbtn.addItem(rs.getString("NAMA_JABATAN"));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Data jabatan tidak ditemukan");
        }
    }

    private String getJabatan(String jabatan) {
        String val = "";
        try {
            String sql = "SELECT NAMA_JABATAN FROM TB_JABATAN WHERE NAMA_JABATAN = ?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, jabatan);

            ResultSet rs = ps.executeQuery();

            if (rs.next()) {
                val = rs.getString("NAMA_JABATAN");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Tidak terhubung ke : " + e.getMessage());
        }

        return val;
    }

    private Integer countKaryawan() {
        Integer count = null;
        try {
            String checkNikSql = "SELECT COUNT(*) FROM TB_USER WHERE USERNAME = ?";
            PreparedStatement checkStmt = conn.prepareStatement(checkNikSql);
            checkStmt.setString(1, nikKar.getText());
            ResultSet rs = checkStmt.executeQuery();

            if (rs.next()) {
                count = rs.getInt("COUNT");
            }

            checkStmt.execute();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "");
        }
        return count;
    }

//    FIND DATA
    private Integer findJabatanName(String valJbtn) {
        Integer find = null;
        try {
            
            String sql = "SELECT ID_JABATAN FROM TB_JABATAN WHERE NAMA_JABATAN = ?";
            PreparedStatement ps = (PreparedStatement) conn.prepareStatement(sql);
            ps.setString(1, valJbtn);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                find = rs.getInt("ID_JABATAN");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Data jabatan tidak ditemukan ");
        }
        return find;
    }

    private Integer getEmployeeId(String nik) {
        Integer find = null;
        try {
            String sql = "SELECT ID_KARYAWAN FROM TB_KARYAWAN WHERE NIK = ?";
            PreparedStatement ps = (PreparedStatement) conn.prepareStatement(sql);
            ps.setString(1, nik);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                find = rs.getInt("ID_KARYAWAN");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Data jabatan tidak ditemukan");
        }
        return find;
    }

    private Integer getDivisiId(String nama) {
        Integer find = null;
        try {
            String sql = "SELECT ID_DIVISI FROM TB_DIVISI WHERE NAMA_DIVISI = ?";
            PreparedStatement ps = (PreparedStatement) conn.prepareStatement(sql);
            ps.setString(1, nama);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                find = rs.getInt("ID_DIVISI");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Data jabatan tidak ditemukan");
        }
        return find;
    }

    private String getEmployeeNumber(String number) {
        String sql = "SELECT NIK FROM TB_KARYAWAN WHERE NIK = ?";
        String val = null;
        try {
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, number);

            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                val = rs.getString("NIK");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Tidak dapat terhubung ke database " + e.getMessage());
        }
        return val;
    }


    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed

        namaKaryawan = namaKar.getText();
        nohp = no.getText();
        alamat = almt.getText();
        divisi = divsi.getSelectedItem().toString();
        namaJabatan = jbtn.getSelectedItem().toString();
        jk = jenis.getSelectedItem().toString();
        nik = nikKar.getText();

        ValidateUtil.validationKaryawan(nik, namaKaryawan, nohp, alamat, divisi, namaJabatan, jk);

        try {
            String sql = """
                                   UPDATE TB_KARYAWAN
                                   SET
                                        ID_JABATAN = ?,
                                        ID_DIVISI = ?,
                                        NAMA_KARYAWAN = ?,
                                        JENIS_KELAMIN = ?,
                                        NIK = ?,
                                        NOTLP = ?,
                                        ALAMAT = ?,
                                        UPDATE_BY = ?, 
                                        UPDATE_AT = ?, 
                                        RECORD_FLAG = ?
                                    WHERE NIK = ?
                            """;
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setInt(1, findJabatanName(namaJabatan));
            ps.setInt(2, getDivisiId(divisi));
            ps.setString(3, namaKaryawan);
            ps.setString(4, jk);

            ps.setString(5, nik);
            ps.setString(6, nohp);
            ps.setString(7, alamat);
            ps.setString(8, "Admin");

            java.util.Date utilDate = new java.util.Date();
            java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
            ps.setDate(9, sqlDate);
            ps.setString(10, Constants.RECORD_FLAG_U);
            ps.execute();

            loadData();

            JOptionPane.showMessageDialog(null, "Data berhasil diubah");

        } catch (Exception e) {

        }
    }//GEN-LAST:event_editActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        clear();
    }//GEN-LAST:event_clearActionPerformed

    private void tblKarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKarMouseClicked
        // TODO add your handling code here:

        loadTbleClick();
    }//GEN-LAST:event_tblKarMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addKaryawan;
    private javax.swing.JTextArea almt;
    private javax.swing.JTextField cari;
    private javax.swing.JButton clear;
    private javax.swing.JComboBox<String> divsi;
    private javax.swing.JButton edit;
    private javax.swing.JButton hapus;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> jbtn;
    private javax.swing.JComboBox<String> jenis;
    private javax.swing.JTextField namaKar;
    private javax.swing.JTextField nikKar;
    private javax.swing.JTextField no;
    private javax.swing.JTable tblKar;
    // End of variables declaration//GEN-END:variables
}
