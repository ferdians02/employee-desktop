/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Beranda;

import Connect.ConnectDB;
import com.mysql.jdbc.Connection;
import java.sql.PreparedStatement;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dell
 */
public class Cari extends javax.swing.JPanel {

    private Connection conn = (Connection) new ConnectDB().connect();

    private final Dashboard main;

    public Cari(Dashboard main) {
        initComponents();
        this.main = main;
        comboSearchBox();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    Cari() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nikKar = new javax.swing.JTextField();
        cari = new javax.swing.JButton();
        namaKar = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        search = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable();

        setBackground(new java.awt.Color(30, 30, 30));

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Pencarian");

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel2.setText("Nomor Induk Karyawan");

        nikKar.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        nikKar.setPreferredSize(new java.awt.Dimension(64, 50));
        nikKar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nikKarActionPerformed(evt);
            }
        });

        cari.setBackground(new java.awt.Color(204, 102, 0));
        cari.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        cari.setForeground(new java.awt.Color(255, 255, 255));
        cari.setText("Cari");
        cari.setBorderPainted(false);
        cari.setPreferredSize(new java.awt.Dimension(0, 50));
        cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cariActionPerformed(evt);
            }
        });

        namaKar.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        namaKar.setPreferredSize(new java.awt.Dimension(64, 50));
        namaKar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaKarActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel5.setText("Nama Karyawan");

        jLabel6.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel6.setText("Cari Untuk :");

        search.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 157, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 157, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nikKar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(namaKar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cari, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(search, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nikKar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(namaKar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cariActionPerformed
        loadSearch();
    }//GEN-LAST:event_cariActionPerformed
    private String comboSearchBox() {
        search.addItem("Pilih");
        search.addItem("Absensi");
        search.addItem("Lembur");
        search.addItem("Cuti");
        search.addItem("Gaji");
        search.addItem("Resign");

        String val = search.getSelectedItem().toString();

        return val;
    }

    private void loadAbsen() {

        DefaultTableModel model = new DefaultTableModel();

        model.addColumn("NIK");
        model.addColumn("NAMA");
        model.addColumn("TANGGAL");
        model.addColumn("STATUS KEHADIRAN");

        try {

            String sql = """
                     SELECT TK.NIK, TK.NAMA_KARYAWAN,TA.TANGGAL, TA.STATUS_KEHADIRAN FROM TB_ABSEN  TA 
                     INNER JOIN TB_KARYAWAN  TK ON TA.ID_KARYAWAN = TK.ID_KARYAWAN
                     """;
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("NIK"),
                    rs.getString("NAMA_KARYAWAN"),
                    rs.getString("TANGGAL"),
                    rs.getString("STATUS_KEHADIRAN"),});

            }
            tbl.setModel(model);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "koneksi Gagal");
        }
    }

    private void loadCuti() {
        DefaultTableModel model = new DefaultTableModel();

        model.addColumn("NIK");
        model.addColumn("NAMA KARYAWAN");
        model.addColumn("TANGGAL");
        model.addColumn("LAMA CUTI");
        model.addColumn("ALASAN CUTI");
        model.addColumn("STATUS");

        String sql = """
                        SELECT TK.NIK, TK.NAMA_KARYAWAN, TC.TANGGAL, TC.LAMA_CUTI, TC.ALASAN_CUTI, TC.STATUS_CUTI FROM TB_CUTI TC
                        INNER JOIN TB_KARYAWAN  TK ON TC.ID_KARYAWAN = TK.ID_KARYAWAN
                        WHERE TK.RECORD_FLAG <> 'D'
                     """;

        try {
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("NIK"),
                    rs.getString("NAMA_KARYAWAN"),
                    rs.getString("TANGGAL"),
                    rs.getString("LAMA_CUTI"),
                    rs.getString("ALASAN_CUTI"),
                    rs.getString("STATUS_CUTI")
                });
            }
//            
            tbl.setModel(model);
        } catch (Exception e) {

        }

    }

    private void loadDataLembur() {
        DefaultTableModel model = new DefaultTableModel();

        model.addColumn("NO SPL");
        model.addColumn("NAMA KARYAWAN");
        model.addColumn("TANGGAL");
        model.addColumn("JAM MULAI");
        model.addColumn("JAM SELESAI");
        model.addColumn("KETERANGAN");
        model.addColumn("STATUS LEMBUR");

        

        try {
            String sql = """
                     SELECT a.SPL_NO, b.NAMA_KARYAWAN, a.TANGGAL, a.JAM_MULAI, a.JAM_SELESAI, a.KETERANGAN, a.STATUS_LEMBUR FROM TB_LEMBUR a
                     INNER JOIN TB_KARYAWAN b ON a.ID_KARYAWAN = b.ID_KARYAWAN
                     WHERE a.RECORD_FLAG  <> 'D'
                     ORDER BY a.ID_SPL DESC
                     """;
            
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("SPL_NO"),
                    rs.getString("nama_karyawan"),
                    rs.getString("TANGGAL"),
                    rs.getString("JAM_MULAI"),
                    rs.getString("JAM_SELESAI"),
                    rs.getString("KETERANGAN"),
                    rs.getString("STATUS_LEMBUR")
                });
            }

            tbl.setModel(model);

        } catch (Exception e) {

        }
    }

    private void loadGaji() {
        DefaultTableModel model = new DefaultTableModel();

        model.addColumn("NIK");
        model.addColumn("NAMA KARYAWAN");
        model.addColumn("BULAN");
        model.addColumn("TAHUN");
        model.addColumn("GAJI POKOK");
        model.addColumn("TUNJANGAN");
        model.addColumn("TOTAL");

        String sql = """
                      SELECT TK.NIK, TK.NAMA_KARYAWAN, TG.BULAN, TG.TAHUN, TG.GAJI_POKOK, TG.TUNJANGAN, TG.TOTAL FROM TB_GAJI TG
                      INNER JOIN TB_KARYAWAN  TK ON TG.ID_KARYAWAN = TK.ID_KARYAWAN
                      WHERE TK.RECORD_FLAG <> 'D' 
                      """;
        try {
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("NIK"),
                    rs.getString("NAMA_KARYAWAN"),
                    rs.getString("BULAN"),
                    rs.getString("TAHUN"),
                    rs.getString("GAJI_POKOK"),
                    rs.getString("TUNJANGAN"),
                    rs.getString("TOTAL"),});
            }
            tbl.setModel(model);
        } catch (Exception e) {

        }
    }

    private void loadResign() {
        DefaultTableModel model = new DefaultTableModel();

        model.addColumn("NIK");
        model.addColumn("NAMA KARYAWAN");
        model.addColumn("TANGGAL");
        model.addColumn("KETERANGAN");
        model.addColumn("PERSETUJUAN");

        String sql = """
                    SELECT TK.NIK, TK.NAMA_KARYAWAN, TR.TANGGAL, TR.KETERANGAN, TR.PERSETUJUAN FROM TB_RESIGN TR
                    INNER JOIN TB_KARYAWAN  TK ON TR.ID_KARYAWAN = TK.ID_KARYAWAN
                    WHERE TR.RECORD_FLAG <> 'D' 
                    """;
        try {
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("NIK"),
                    rs.getString("NAMA_KARYAWAN"),
                    rs.getString("TANGGAL"),
                    rs.getString("KETERANGAN"),
                    rs.getString("PERSETUJUAN"),});
            }
            tbl.setModel(model);
        } catch (Exception e) {

        }
    }

    private void namaKarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaKarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namaKarActionPerformed
    private void loadTbleClick() {
        try {
            String sql = """
                         SELECT 
                         """;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Tidak berhasil ditampil");
        }
    }
    private void tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMouseClicked
        loadTbleClick();

    }//GEN-LAST:event_tblMouseClicked

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed


    }//GEN-LAST:event_searchActionPerformed
    private void loadSearch() {
        String select = search.getSelectedItem().toString();

        if (select.equalsIgnoreCase("Pilih")) {
            DefaultTableModel model = (DefaultTableModel) tbl.getModel();
            model.setRowCount(0);

        } else if (select.equalsIgnoreCase("Absensi")) {
            loadAbsen();
        } else if (select.equalsIgnoreCase("Lembur")) {
            loadDataLembur();
        } else if (select.equalsIgnoreCase("Cuti")) {
            loadCuti();
        } else if (select.equalsIgnoreCase("Gaji")) {
            loadGaji();
        } else if (select.equalsIgnoreCase("Resign")) {
            loadResign();
        }
    }
    private void nikKarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nikKarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nikKarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cari;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField namaKar;
    private javax.swing.JTextField nikKar;
    private javax.swing.JComboBox<String> search;
    private javax.swing.JTable tbl;
    // End of variables declaration//GEN-END:variables
}
