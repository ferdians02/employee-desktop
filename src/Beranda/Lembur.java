/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Beranda;

import Connect.ConnectDB;
import Loginreg.*;
import com.mysql.jdbc.Connection;
import constant.Constants;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import util.ValidateUtil;
import util.ValidationOption;

/**
 *
 * @author Dell
 */
public class Lembur extends javax.swing.JPanel {

    private Connection conn = (Connection) new ConnectDB().connect();
    private final Dashboard main;

    private String nama;
    private String nik;

    public Lembur(Dashboard main, String nik, String name) {
        initComponents();

        this.main = main;
        this.nama = name;
        this.nik = nik;
        loadData(nik);
//        loadData2();

        persetujuan.setEnabled(true);
        stts.setEnabled(true);
        keter.setEnabled(true);
        namkar.setText(name);
        namkar.setEnabled(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        save = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        namkar = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ket = new javax.swing.JTextArea();
        edit = new javax.swing.JButton();
        mulai = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        selesai = new javax.swing.JTextField();
        tgl = new com.toedter.calendar.JDateChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        persetujuan = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        stts = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        keter = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 253, 246));

        jLabel1.setBackground(new java.awt.Color(30, 30, 30));
        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(30, 30, 30));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Pengisian Lembur");

        save.setBackground(new java.awt.Color(0, 0, 102));
        save.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        save.setForeground(new java.awt.Color(255, 255, 255));
        save.setText("Simpan");
        save.setBorderPainted(false);
        save.setPreferredSize(new java.awt.Dimension(0, 50));
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(30, 30, 30));
        jLabel4.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(30, 30, 30));
        jLabel4.setText("Tanggal");

        namkar.setEditable(false);
        namkar.setBackground(new java.awt.Color(255, 253, 246));
        namkar.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        namkar.setForeground(new java.awt.Color(30, 30, 30));
        namkar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        namkar.setPreferredSize(new java.awt.Dimension(64, 50));
        namkar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namkarActionPerformed(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(30, 30, 30));
        jLabel5.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(30, 30, 30));
        jLabel5.setText("Nama Karyawan");

        jLabel6.setBackground(new java.awt.Color(30, 30, 30));
        jLabel6.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(30, 30, 30));
        jLabel6.setText("Jam Mulai");

        jLabel7.setBackground(new java.awt.Color(30, 30, 30));
        jLabel7.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(30, 30, 30));
        jLabel7.setText("Keterangan lembur");

        ket.setBackground(new java.awt.Color(255, 253, 246));
        ket.setColumns(20);
        ket.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        ket.setForeground(new java.awt.Color(30, 30, 30));
        ket.setRows(5);
        ket.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane1.setViewportView(ket);

        edit.setBackground(new java.awt.Color(0, 0, 102));
        edit.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        edit.setForeground(new java.awt.Color(255, 255, 255));
        edit.setText("Edit");
        edit.setBorderPainted(false);
        edit.setPreferredSize(new java.awt.Dimension(0, 50));
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        mulai.setBackground(new java.awt.Color(255, 253, 246));
        mulai.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        mulai.setForeground(new java.awt.Color(30, 30, 30));
        mulai.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        mulai.setPreferredSize(new java.awt.Dimension(64, 50));
        mulai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mulaiActionPerformed(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(30, 30, 30));
        jLabel8.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(30, 30, 30));
        jLabel8.setText("Jam Selesai");

        selesai.setBackground(new java.awt.Color(255, 253, 246));
        selesai.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        selesai.setForeground(new java.awt.Color(30, 30, 30));
        selesai.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        selesai.setPreferredSize(new java.awt.Dimension(64, 50));

        tgl.setBackground(new java.awt.Color(255, 253, 246));
        tgl.setForeground(new java.awt.Color(30, 30, 30));

        tbl.setBackground(new java.awt.Color(255, 253, 246));
        tbl.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        tbl.setForeground(new java.awt.Color(30, 30, 30));
        tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbl);

        jLabel10.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(30, 30, 30));
        jLabel10.setText("Persetujuan");

        persetujuan.setBackground(new java.awt.Color(255, 253, 246));
        persetujuan.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        persetujuan.setForeground(new java.awt.Color(30, 30, 30));
        persetujuan.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        persetujuan.setPreferredSize(new java.awt.Dimension(64, 50));
        persetujuan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                persetujuanActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(30, 30, 30));
        jLabel9.setText("Status");

        stts.setBackground(new java.awt.Color(255, 253, 246));
        stts.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        stts.setForeground(new java.awt.Color(30, 30, 30));
        stts.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        stts.setPreferredSize(new java.awt.Dimension(64, 50));

        jLabel11.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(30, 30, 30));
        jLabel11.setText("Keterangan");

        keter.setBackground(new java.awt.Color(255, 253, 246));
        keter.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        keter.setForeground(new java.awt.Color(30, 30, 30));
        keter.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        keter.setPreferredSize(new java.awt.Dimension(64, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(584, 717, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)
                            .addComponent(namkar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(mulai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(selesai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tgl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(persetujuan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(stts, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(keter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(edit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(save, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel1)
                .addGap(15, 15, 15)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(namkar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tgl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mulai, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selesai, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(persetujuan, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stts, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(keter, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed

        java.util.Date date = tgl.getDate();

        ValidationOption result = ValidateUtil.validationLembur(date, mulai.getText(), selesai.getText(), ket.getText());

        if (!result.isValid()) {
            JOptionPane.showMessageDialog(null, result.getMessage());
            return;
        }

        try {
            String sql = """
                     INSERT INTO TB_LEMBUR 
                     (ID_KARYAWAN,SPL_NO, TANGGAL, JAM_MULAI, JAM_SELESAI,STATUS_LEMBUR, KETERANGAN, CREATE_BY, CREATE_AT, RECORD_FLAG) 
                     VALUES (?,?,?,?,?,?,?,?,?,?)
                     """;
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setInt(1, cariId(namkar.getText()));
            ps.setString(2, generateSpl());

            java.sql.Date tanggal = new java.sql.Date(date.getTime());
            ps.setDate(3, tanggal);
            ps.setString(4, mulai.getText());
            ps.setString(5, selesai.getText());
            ps.setString(6, "Waiting for approve");
            ps.setString(7, ket.getText());
            ps.setString(8, "Admin");
            java.util.Date utilDate = new java.util.Date();
            java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
            ps.setDate(9, sqlDate);
            ps.setString(10, Constants.RECORD_FLAG_N);

            ps.executeUpdate();
            loadData(nik);
            clear();
            JOptionPane.showMessageDialog(null, "Data Berhasil Di Simpan");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Tidak ke Simpan " + e.getMessage());
        }
        

    }//GEN-LAST:event_saveActionPerformed
    private void clear(){
        namkar.setText("");
        mulai.setText("");
        selesai.setText("");
        ket.setText("");
    }    
    
    private Integer getIdSpl(String nik){
            Integer id = null;
            try{
                String sql = """
                             SELECT id_spl FROM tb_lembur l 
                             INNER JOIN tb_karyawan k on l.id_karyawan = k.id_karyawan
                             where k.nik = ? and  l.status_lembur = 'Revision'
                             """;
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setInt(1, id);
            
            }catch(Exception e){
                
            }
            return id;
        }
    
    
    
    
    private Integer cariId(String namaKaryawan) {
        Integer id = null;
        try {
            String sql = "SELECT ID_KARYAWAN FROM TB_KARYAWAN WHERE NAMA_KARYAWAN = ?";

            System.out.println("Ini Nama Karyawan : " + namaKaryawan);
            System.out.println("Ini SQL : " + sql);

            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, namaKaryawan);

            ResultSet rs = ps.executeQuery();

            if (rs.next()) {
                id = rs.getInt("ID_KARYAWAN");
                System.out.println("Ini ID : " + id);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Tidak terhubung ke TB_Karyawan");
        }
        return id;
    }

    private void loadData(String no) {
        DefaultTableModel model = new DefaultTableModel();

        model.addColumn("NO SPL");
        model.addColumn("NIK");
        model.addColumn("NAMA KARYAWAN");
        model.addColumn("TANGGAL");
        model.addColumn("JAM MULAI");
        model.addColumn("JAM SELESAI");
        model.addColumn("STATUS");

        try {
            String sql = """
                         SELECT
                            TL.SPL_NO,
                            TK.NIK,
                            TK.NAMA_KARYAWAN,
                            TL.TANGGAL,
                            TL.JAM_MULAI,
                            TL.JAM_SELESAI,
                            TL.STATUS_LEMBUR
                         FROM TB_LEMBUR TL 
                         INNER JOIN TB_KARYAWAN TK ON TL.ID_KARYAWAN = TK.ID_KARYAWAN
                         WHERE TK.NIK =?
                         """;
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, no);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("SPL_NO"),
                    rs.getString("NIK"),
                    rs.getString("nama_karyawan"),
                    rs.getString("tanggal"),
                    rs.getString("jam_mulai"),
                    rs.getString("jam_selesai"),
                    rs.getString("status_lembur")
                });
            }

            tbl.setModel(model);

        } catch (Exception e) {

        }
    }
    
    private void loadTbleClick() {
        try {
            String sql = """
                            SELECT
                                TL.SPL_NO,
                                TK.NAMA_KARYAWAN,
                                TL.TANGGAL,
                                TL.JAM_MULAI,
                                TL.JAM_SELESAI,
                                TL.KETERANGAN,
                                                                
                                TKA.NAMA_KARYAWAN AS NAMA_ATASAN,
                                TL.STATUS_LEMBUR,
                                TL.APPROVAL_SPV_DESC1
                                FROM TB_LEMBUR TL 
                                INNER JOIN TB_KARYAWAN TK ON TL.ID_KARYAWAN = TK.ID_KARYAWAN
                                INNER JOIN TB_DIVISI TD ON TK.ID_DIVISI = TD.ID_DIVISI
                                INNER JOIN TB_JABATAN TJ ON TK.ID_JABATAN = TJ.ID_JABATAN
                                                                                                                                       
                                INNER JOIN TB_KARYAWAN TKA ON TKA.ID_DIVISI = TK.ID_DIVISI AND 
                                TKA.ID_JABATAN > TK.ID_JABATAN  
                                INNER JOIN TB_JABATAN TJA ON TKA.ID_JABATAN = TJA.ID_JABATAN 
                                WHERE TL.SPL_NO = ?
                                ORDER BY TKA.ID_JABATAN ASC
                                """;

            int row = tbl.getSelectedRow();
            String clickTable = (tbl.getModel().getValueAt(row, 0).toString());

            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, clickTable);
            ResultSet rs = ps.executeQuery();

            if (rs.next()) {
                

                namkar.setText(rs.getString("nama_karyawan"));
                tgl.setDate(rs.getDate("tanggal"));
                mulai.setText(rs.getString("jam_mulai"));
                selesai.setText(rs.getString("jam_selesai"));
                ket.setText(rs.getString("keterangan"));
                persetujuan.setText(rs.getString("nama_atasan"));
                stts.setText(rs.getString("status_lembur"));
                keter.setText(rs.getString("approval_spv_desc1"));
            }
            
        } catch (Exception e) {

        }
    }
    
    private String sqlFunc (String nik){
        
        String val = null;
        try{
            String sql = """
                         SELECT
                            
                            TL.STATUS_LEMBUR
                            FROM TB_LEMBUR TL 
                            INNER JOIN TB_KARYAWAN TK ON TL.ID_KARYAWAN = TK.ID_KARYAWAN
                            INNER JOIN TB_DIVISI TD ON TK.ID_DIVISI = TD.ID_DIVISI
                            INNER JOIN TB_JABATAN TJ ON TK.ID_JABATAN = TJ.ID_JABATAN
                                                                                                                                                                
                            INNER JOIN TB_KARYAWAN TKA ON TKA.ID_DIVISI = TK.ID_DIVISI AND 
                            TKA.ID_JABATAN > TK.ID_JABATAN  
                            INNER JOIN TB_JABATAN TJA ON TKA.ID_JABATAN = TJA.ID_JABATAN 
                            WHERE TK.NIK = ?
                            ORDER BY TKA.ID_JABATAN ASC
                         """;
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, nik);
            ResultSet rs = ps.executeQuery();
            
            if(rs.next()){
                val = rs.getString("status_lembur");
                
            }
            
        }catch(Exception e){
            
        }
        return val;
        
    }

    private void loadData2() {
        DefaultTableModel model = new DefaultTableModel();

        model.addColumn("NO SPL");
        model.addColumn("NAMA KARYAWAN");
        model.addColumn("TANGGAL");
        model.addColumn("JAM MULAI");
        model.addColumn("JAM SELESAI");
        model.addColumn("STATUS");

        try {
            String sql = """
                         SELECT
                            TL.SPL_NO,
                            TK.NAMA_KARYAWAN,
                            TL.TANGGAL,
                            TL.JAM_MULAI,
                            TL.JAM_SELESAI,
                            TL.STATUS_LEMBUR
                         FROM TB_LEMBUR TL 
                         INNER JOIN TB_KARYAWAN TK ON TL.ID_KARYAWAN = TK.ID_KARYAWAN
                         
                         """;
            PreparedStatement ps = conn.prepareStatement(sql);
//            ps.setString(1, no);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("SPL_NO"),
                    rs.getString("nama_karyawan"),
                    rs.getString("tanggal"),
                    rs.getString("jam_mulai"),
                    rs.getString("jam_selesai"),
                    rs.getString("status_lembur")
                });
            }

            tbl.setModel(model);

        } catch (Exception e) {

        }
    }
    private void mulaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mulaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mulaiActionPerformed
    private String generateSpl() {
        String val = null;
        SimpleDateFormat sdf = new SimpleDateFormat("MMyy");
        SimpleDateFormat sdf2 = new SimpleDateFormat("yy");
        java.util.Date utilDate = new java.util.Date();

        try {
            int noUrut = 0;
            String spl = "SPL/";

            String sql = """
                       SELECT TB.SPL_NO FROM TB_LEMBUR TB
                       INNER JOIN TB_KARYAWAN TK ON TB.ID_KARYAWAN = TK.ID_KARYAWAN
                       WHERE TK.NIK = ? 
                       ORDER BY TB.SPL_NO DESC
                       """;
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, nik);

            ResultSet rs = ps.executeQuery();
            String nospl = null;

            if (rs.next()) {
                nospl = rs.getString("SPL_NO");

            }

            if (nospl == null) {
                noUrut = 1;
            } else {
                String year = nospl.substring(6, 8);

                if (!year.equals(sdf2.format(utilDate))) {
                    noUrut = 1;
                } else {
                    noUrut = Integer.parseInt(nospl.substring(15, 18));
                    noUrut++;
                }
            }

            val = spl + sdf.format(utilDate) + "/" + nik + "/" + String.format("%03d", noUrut);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Tidak terhubung ke " + e.getMessage());
        }
        return val;
    }
    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
          try{
              String sql = """
                            UPDATE TB_LEMBUR TL
                            JOIN TB_KARYAWAN TK
                            SET
                           
                            TL.TANGGAL = ?,
                            TL.JAM_MULAI = ?,
                            TL.JAM_SELESAI = ?,
                            TL.KETERANGAN = ?,
                            
                            TL.UPDATE_BY = ?,
                            TL.UPDATE_AT = ?,
                            TL.STATUS_LEMBUR = ?
                            WHERE TK.NIK =?
                           """;
              PreparedStatement ps = conn.prepareStatement(sql);
             
              java.util.Date utilDate2 = tgl.getDate();
              java.sql.Date tanggal = new java.sql.Date(utilDate2.getTime());
          
              ps.setDate(1, tanggal);
              ps.setString(2, mulai.getText());
              ps.setString(3, selesai.getText());
              ps.setString(4, ket.getText());
              ps.setString(5, nik);
              
              java.util.Date utilDate = new java.util.Date();
              java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
              ps.setDate(6, sqlDate);
              ps.setString(7, Constants.WAITING_FOR_APPROVAL);
              ps.setString(8, nik);
              
              
              ps.execute();
              loadData(nik);
              clear();
              JOptionPane.showMessageDialog(null, "Data berhasil diubah");
          }catch(Exception e){
              JOptionPane.showMessageDialog(null, "Data tidak terhubung ke " + e.getMessage());
          }
    }//GEN-LAST:event_editActionPerformed

    private void namkarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namkarActionPerformed

    }//GEN-LAST:event_namkarActionPerformed

    private void tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMouseClicked
    loadTbleClick();    // TODO add your handling code here:
    }//GEN-LAST:event_tblMouseClicked

    private void persetujuanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_persetujuanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_persetujuanActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton edit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea ket;
    private javax.swing.JTextField keter;
    private javax.swing.JTextField mulai;
    private javax.swing.JTextField namkar;
    private javax.swing.JTextField persetujuan;
    private javax.swing.JButton save;
    private javax.swing.JTextField selesai;
    private javax.swing.JTextField stts;
    private javax.swing.JTable tbl;
    private com.toedter.calendar.JDateChooser tgl;
    // End of variables declaration//GEN-END:variables
}
